import "dotenv/config";
import axios from "axios";
import cron from "node-cron";
import { i18n } from "../plugins/i18n.js";
import { BotApiType, ICoin, IFullUser } from "../types/index.js";
import { DB } from "../database/db.js";

export const setCheckCoins = (bot: BotApiType) => {
    cron.schedule("* * * * *", async () => {
      
        // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –æ –Ω–∏—Ö
        const users: Array<IFullUser> = await DB.query(`
          SELECT users.id, users.tg_user_id, users.tg_user_lang, assets.list, assets.percent 
          FROM ${process.env.DB_SCHEMA}.users AS users
          JOIN ${process.env.DB_SCHEMA}.assets AS assets ON users.id = assets.user_id;
        `);

        // –§–∏–ª—å—Ä—É–µ–º –º–æ–Ω–µ—Ç—ã —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –≤ –æ–¥–Ω–æ–º –∑–∞–ø—Ä–æ—Å–µ
        const uniqueCoins = Array.from(new Set(users.map((user) => user.list).flat()));
        const coins = await axios.get(`${process.env.URL_API}coins=${uniqueCoins}`);

        // –§–∏–ª—å—Ç—Ä—É–µ–º –º–æ–Ω–µ—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ –∏–ª–∏ –º–µ–Ω—å—à–µ –Ω–∞—à–µ–º—É —Ñ–∏–∫—Å –ø—Ä–æ—Ü–µ–Ω—Ç—É
        const usersAlarm = users.map((user: IFullUser) => {
            const filteredCoins = coins.data
              .map((coin: ICoin) => {
                  const percentChange = ((coin.price.USD - coin.histPrices["24H"].USD) / coin.histPrices["24H"].USD) * 100;
                  if (Math.abs(percentChange) > user.percent) return { name: coin.name, percent: percentChange, previousPrice: coin.histPrices["24H"].USD, currentPrice: coin.price.USD };
              })
              .filter((coin: ICoin) => coin)

            return { id: user.tg_user_id, coins: filteredCoins, lang: user.tg_user_lang };
        });

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ü–µ–Ω—ã
        usersAlarm.forEach(user => {
          user.coins.forEach((coin: { name: string, percent: number, previousPrice: number, currentPrice: number }) => {
            const message = i18n.t(user.lang, "alarmPrice", { name: coin.name, percent: coin.percent, previousPrice: coin.previousPrice, currentPrice: coin.currentPrice, icon: coin.percent > 0 ? "üü¢" : "üî¥" })
            bot.api.sendMessage(user.id, message, { parse_mode: "HTML" });
          })
        })
    });
};
